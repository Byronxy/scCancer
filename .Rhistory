devtools::build()
devtools::build()
hg.mm.shareGene <- read.table("F:/Research/Projects/PDAC/annotation/hg-mm-shareGenes.txt", header = T)
hg.mm.shareGene <- read.table("F:/Research/Projects/PDAC/annotation/hg-mm-shareGenes.txt", header = T, stringsAsFactors = F)
head(substr(hg.mm.shareGene$hgGenes, 1:5))
head(substr(hg.mm.shareGene$hgGenes, 1, 5))
head(substr(hg.mm.shareGene$hgGenes, 6, 60))
length(unique(substr(hg.mm.shareGene$hgGenes, 6, 60))))
head(substr(hg.mm.shareGene$hgGenes, 1, 5)
head(substr(hg.mm.shareGene$hgGenes, 1:5))
length(unique(substr(hg.mm.shareGene$hgGenes, 6, 60)))
length(unique(substr(hg.mm.shareGene$mmGenes, 6, 60)))
hg.mm.shareGene$hgGenes <- substr(hg.mm.shareGene$hgGenes, 6, 60)
hg.mm.shareGene$mmGenes <- substr(hg.mm.shareGene$mmGenes, 6, 60)
write.table(hg.mm.shareGene, "../hg-mm-shareGenes.txt", quote = F,row.names = F)
getwd()
write.table(hg.mm.shareGene, "../hg-mm-shareGenes.txt", quote = F, row.names = F, sep = "\t")
stem.sig.file <- system.file("txt", "pcbc-stemsig.tsv", package = "scCancer")
stem.sig <- read.delim(stem.sig.file, header = FALSE, row.names = 1)
View(stem.sig)
getMouseGene <- function(hg.genes, bool.name = F){
hg.mm.shareGene <- read.table(system.file("txt", "hg-mm-shareGenes.txt", package = "scCancer"),
header = T, stringsAsFactors = F)
mm.genes <- hg.mm.shareGene$mmGenes[hg.mm.shareGene$hgGenes %in% hg.genes]
if(bool.name){
names(mm.genes) <- hg.mm.shareGene$hgGenes[hg.mm.shareGene$hgGenes %in% hg.genes]
}
return(mm.genes)
}
sig.genes <- getMouseGene(rownames(stem.sig), bool.name = T)
getMouseGene <- function(hg.genes, bool.name = F){
# hg.mm.shareGene <- read.table(system.file("txt", "hg-mm-shareGenes.txt", package = "scCancer"),
#                               header = T, stringsAsFactors = F)
mm.genes <- hg.mm.shareGene$mmGenes[hg.mm.shareGene$hgGenes %in% hg.genes]
if(bool.name){
names(mm.genes) <- hg.mm.shareGene$hgGenes[hg.mm.shareGene$hgGenes %in% hg.genes]
}
return(mm.genes)
}
sig.genes <- getMouseGene(rownames(stem.sig), bool.name = T)
head(sig.genes)
stem.sig2 <- stem.sig[names(sig.genes), ]
head(stem.sig2)
which(names(stem.sig2) == "SAMD11")
which(names(stem.sig2) == "NOC2L")
which(names(stem.sig2) == "ISG15")
stem.sig["ISG15", ]
stem.sig["SAMD11", ]
stem.sig2 <- stem.sig[names(sig.genes), , drop=F]
View(stem.sig2)
rownames(stem.sig2) <- sig.genes
library(scCancer)
help("runScAnnotation")
geneSets <- readLines(system.file("txt", "hallmark-pathways.txt", package = "scCancer"))
geneSets <- strsplit(geneSets, "\t")
geneSets <- as.data.frame(geneSets, stringsAsFactors = F)
colnames(geneSets) <- geneSets[1, ]
geneSets <- as.list(geneSets[2, ])
geneSets <- sapply(geneSets, function(x) strsplit(x, ", "))
View(geneSets)
names(geneSets)
for(set.name in names(geneSets)){
geneSets[[set.name]] <- getMouseGene(geneSets[[set.name]])
}
tt <- geneSets
geneSets <- readLines(system.file("txt", "hallmark-pathways.txt", package = "scCancer"))
geneSets <- strsplit(geneSets, "\t")
geneSets <- as.data.frame(geneSets, stringsAsFactors = F)
colnames(geneSets) <- geneSets[1, ]
geneSets <- as.list(geneSets[2, ])
geneSets <- sapply(geneSets, function(x) strsplit(x, ", "))
which(c("EGFR", "DDDD") %in% hg.mm.shareGene$hgGenes)
which(hg.mm.shareGene$hgGenes %in% c("EGFR", "DDDD"))
head(which(hg.mm.shareGene$hgGenes %in% c("EGFR", "DDDD")))
hg.mm.shareGene$hgGenes[6198]
head(which(hg.mm.shareGene$hgGenes %in% c("EGFR", "DDDD", "TP53")))
head(which(hg.mm.shareGene$hgGenes %in% c("EGFR", "DDDD", "ERBB2")))
head(which(hg.mm.shareGene$hgGenes %in% c("DDDD", "ERBB2", "EGFR")))
rownames(hg.mm.shareGene) <- hg.mm.shareGene$hgGenes
View(geneSets)
View(hg.mm.shareGene)
hg.genes <- c("DDDD", "ERBB2", "EGFR")
hg.genes[hg.genes %in% hg.mm.shareGene$hgGenes]
hg.mm.shareGene[hg.genes, "mmGenes"]
hg.genes <- hg.genes[hg.genes %in% hg.mm.shareGene$hgGenes]
hg.genes
hg.mm.shareGene[hg.genes, "mmGenes"]
hg.genes <- c("EGFR", "DDDD", "ERBB2")
hg.genes <- hg.genes[hg.genes %in% hg.mm.shareGene$hgGenes]
hg.mm.shareGene[hg.genes, "mmGenes"]
hg.genes
mm.genes <- hg.mm.shareGene[hg.genes, "mmGenes"]
mm.genes
getMouseGene <- function(hg.genes, bool.name = F){
# hg.mm.shareGene <- read.table(system.file("txt", "hg-mm-shareGenes.txt", package = "scCancer"),
#                               header = T, stringsAsFactors = F)
rownames(hg.mm.shareGene) <- hg.mm.shareGene$hgGenes
hg.genes <- hg.genes[hg.genes %in% hg.mm.shareGene$hgGenes]
mm.genes <- hg.mm.shareGene[hg.genes, "mmGenes"]
if(bool.name){
names(mm.genes) <- hg.genes
}
return(mm.genes)
}
geneSets <- readLines(system.file("txt", "hallmark-pathways.txt", package = "scCancer"))
geneSets <- strsplit(geneSets, "\t")
geneSets <- as.data.frame(geneSets, stringsAsFactors = F)
colnames(geneSets) <- geneSets[1, ]
geneSets <- as.list(geneSets[2, ])
geneSets <- sapply(geneSets, function(x) strsplit(x, ", "))
gene22 <- geneSets
for(set.name in names(geneSets)){
geneSets[[set.name]] <- getMouseGene(geneSets[[set.name]])
}
ct.templates <- readRDS(system.file("rds", "cellTypeTemplates.RDS", package = "scCancer"))
View(ct.templates)
names(ct.templates)
tt <- ct.templates[["Epithelial"]]
head(tt)
cur.ct <- "Epithelial"
cur.temp <- ct.templates[[cur.ct]]
cur.temp
ct.genes <- getMouseGene(names(cur.temp), bool.name = T)
ct.genes
head(cur.temp)
cur.temp <- ct.templates[[cur.ct]]
ct.genes <- getMouseGene(names(cur.temp), bool.name = T)
cur.temp <- cur.temp[names(ct.genes)]
cur.temp <- ct.templates[[cur.ct]]
ct.genes <- getMouseGene(names(cur.temp), bool.name = T)
cur.temp <- cur.temp[names(ct.genes)]
names(cur.temp) <- ct.genes
head(cur.temp)
hg.mm.shareGene <- read.table("../hg-mm-shareGenes.txt", header = T, stringsAsFactors = F)
hg.mm.shareGene <- read.table("F:/Research/Projects/PDAC/annotation/hg-mm-shareGenes.txt", header = T, stringsAsFactors = F)
## ---------------------
hg.mm.shareGene$hgGenes <- substr(hg.mm.shareGene$hgGenes, 6, 60)
hg.mm.shareGene$mmGenes <- substr(hg.mm.shareGene$mmGenes, 6, 60)
cur.temp <- ct.templates[[cur.ct]]
ct.templates <- readRDS(system.file("rds", "cellTypeTemplates.RDS", package = "scCancer"))
cur.temp <- ct.templates[[cur.ct]]
cur.ct <- "Epithelial"
cur.temp <- ct.templates[[cur.ct]]
cur.genes <- getMouseGene(names(cur.temp), bool.name = T)
getMouseGene <- function(hg.genes, bool.name = F){
# hg.mm.shareGene <- read.table(system.file("txt", "hg-mm-shareGenes.txt", package = "scCancer"),
#                               header = T, stringsAsFactors = F)
rownames(hg.mm.shareGene) <- hg.mm.shareGene$hgGenes
hg.genes <- hg.genes[hg.genes %in% hg.mm.shareGene$hgGenes]
mm.genes <- hg.mm.shareGene[hg.genes, "mmGenes"]
if(bool.name){
names(mm.genes) <- hg.genes
}
return(mm.genes)
}
cur.genes <- getMouseGene(names(cur.temp), bool.name = T)
cur.temp <- cur.temp[names(cur.genes)]
names(cur.temp) <- cur.genes
head(cur.genes)
head(cur.temp)
head(ct.templates[[cur.ct]][names(cur.genes)])
gene.manifest <- read.table('../results/scCancer097/20180912-PA-P6-Tumor2-vCR3/geneManifest.txt', header = T, sep = "\t")
getwd()
gene.manifest <- read.table('../results/scCancer097/20180829-KC-P2-Tumor-vCR3/geneManifest.txt', header = T, sep = "\t")
addGeneAnno <- function (gene.manifest, species = "human"){
annotation <- rep("other", dim(gene.manifest)[1])
mito.genes <- grep('^MT-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^RPL|^RPS|^MRPL|^MRPS', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
if(species == "mouse"){
mito.genes <- getMouseGene(mito.genes)
ribo.genes <- getMouseGene(ribo.genes)
diss.genes <- getMouseGene(diss.genes)
}
annotation[gene.manifest$Symbol %in% mito.genes] <- "mitochondrial"
annotation[gene.manifest$Symbol %in% ribo.genes] <- "ribosome"
annotation[gene.manifest$Symbol %in% diss.genes] <- "dissociation"
gene.manifest$Annotation <- annotation
return(gene.manifest)
}
t1 <- addGeneAnno(gene.manifest)
addGeneAnno <- function (gene.manifest, species = "human"){
annotation <- rep("other", dim(gene.manifest)[1])
if(species == "human"){
mito.genes <- grep('^MT-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^RPL|^RPS|^MRPL|^MRPS', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
}
else if(species == "mouse"){
mito.genes <- grep('^mt-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^Rpl|^Rps|^Mrpl|^Mrps', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "mus-diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
}
annotation[gene.manifest$Symbol %in% mito.genes] <- "mitochondrial"
annotation[gene.manifest$Symbol %in% ribo.genes] <- "ribosome"
annotation[gene.manifest$Symbol %in% diss.genes] <- "dissociation"
gene.manifest$Annotation <- annotation
return(gene.manifest)
}
t2 <- addGeneAnno(gene.manifest)
table(t1$Annotation)
table(t2$Annotation)
gene.manifest <- read.table('../data/MB/filtered_gene_bc_matrices/hg19/genes.tsv', header = T, sep = "\t")
t2 <- addGeneAnno(gene.manifest)
addGeneAnno <- function (gene.manifest, species = "human"){
annotation <- rep("other", dim(gene.manifest)[1])
mito.genes <- grep('^MT-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^RPL|^RPS|^MRPL|^MRPS', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
if(species == "mouse"){
mito.genes <- getMouseGene(mito.genes)
ribo.genes <- getMouseGene(ribo.genes)
diss.genes <- getMouseGene(diss.genes)
}
annotation[gene.manifest$Symbol %in% mito.genes] <- "mitochondrial"
annotation[gene.manifest$Symbol %in% ribo.genes] <- "ribosome"
annotation[gene.manifest$Symbol %in% diss.genes] <- "dissociation"
gene.manifest$Annotation <- annotation
return(gene.manifest)
}
t1 <- addGeneAnno(gene.manifest)
table(t2$Annotation)
table(t1$Annotation)
t1 <- addGeneAnno(gene.manifest, species = "mouse")
addGeneAnno <- function (gene.manifest, species = "human"){
annotation <- rep("other", dim(gene.manifest)[1])
mito.genes <- grep('^MT-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^RPL|^RPS|^MRPL|^MRPS', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
if(species == "mouse"){
mito.genes <- getMouseGene(mito.genes)
ribo.genes <- getMouseGene(ribo.genes)
diss.genes <- getMouseGene(diss.genes)
}
annotation[gene.manifest$Symbol %in% mito.genes] <- "mitochondrial"
annotation[gene.manifest$Symbol %in% ribo.genes] <- "ribosome"
annotation[gene.manifest$Symbol %in% diss.genes] <- "dissociation"
gene.manifest$Annotation <- annotation
return(gene.manifest)
}
t1 <- addGeneAnno(gene.manifest, species = "mouse")
addGeneAnno <- function (gene.manifest, species = "human"){
annotation <- rep("other", dim(gene.manifest)[1])
if(species == "human"){
mito.genes <- grep('^MT-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^RPL|^RPS|^MRPL|^MRPS', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
}
else if(species == "mouse"){
mito.genes <- grep('^mt-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^Rpl|^Rps|^Mrpl|^Mrps', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "mus-diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
}
annotation[gene.manifest$Symbol %in% mito.genes] <- "mitochondrial"
annotation[gene.manifest$Symbol %in% ribo.genes] <- "ribosome"
annotation[gene.manifest$Symbol %in% diss.genes] <- "dissociation"
gene.manifest$Annotation <- annotation
return(gene.manifest)
}
t2 <- addGeneAnno(gene.manifest, species = "mouse")
table(t1$Annotation)
table(t2$Annotation)
gene.manifest <- read.table('../data/MB/filtered_gene_bc_matrices/hg19/genes.tsv', header = F, sep = "\t")
View(gene.manifest)
gene.manifest <- read.table('../results/scCancer097/20180829-KC-P2-Tumor-vCR3/geneManifest.txt', header = T, sep = "\t")
gene.manifest <- read.table('../data/MB/filtered_gene_bc_matrices/hg19/genes.tsv', header = F, sep = "\t")
colnames(gene.manifest) <- c("EnsemblID", "Symbol")
addGeneAnno <- function (gene.manifest, species = "human"){
annotation <- rep("other", dim(gene.manifest)[1])
mito.genes <- grep('^MT-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^RPL|^RPS|^MRPL|^MRPS', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
if(species == "mouse"){
mito.genes <- getMouseGene(mito.genes)
ribo.genes <- getMouseGene(ribo.genes)
diss.genes <- getMouseGene(diss.genes)
}
annotation[gene.manifest$Symbol %in% mito.genes] <- "mitochondrial"
annotation[gene.manifest$Symbol %in% ribo.genes] <- "ribosome"
annotation[gene.manifest$Symbol %in% diss.genes] <- "dissociation"
gene.manifest$Annotation <- annotation
return(gene.manifest)
}
t1 <- addGeneAnno(gene.manifest, species = "mouse")
addGeneAnno <- function (gene.manifest, species = "human"){
annotation <- rep("other", dim(gene.manifest)[1])
if(species == "human"){
mito.genes <- grep('^MT-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^RPL|^RPS|^MRPL|^MRPS', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
}
else if(species == "mouse"){
mito.genes <- grep('^mt-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^Rpl|^Rps|^Mrpl|^Mrps', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "mus-diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
}
annotation[gene.manifest$Symbol %in% mito.genes] <- "mitochondrial"
annotation[gene.manifest$Symbol %in% ribo.genes] <- "ribosome"
annotation[gene.manifest$Symbol %in% diss.genes] <- "dissociation"
gene.manifest$Annotation <- annotation
return(gene.manifest)
}
t2 <- addGeneAnno(gene.manifest, species = "mouse")
table(t1$Annotation)
2
table(t2$Annotation)
addGeneAnno <- function (gene.manifest, species = "human"){
annotation <- rep("other", dim(gene.manifest)[1])
if(species == "human"){
mito.genes <- grep('^MT-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^RPL|^RPS|^MRPL|^MRPS', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
}else if(species == "mouse"){
mito.genes <- grep('^mt-', gene.manifest$Symbol, value = TRUE)
ribo.genes <- grep('^Rpl|^Rps|^Mrpl|^Mrps', gene.manifest$Symbol, value = TRUE)
diss.genes <- read.table(system.file("txt", "diss-genes.txt", package = "scCancer"),
header = F, stringsAsFactors = F)$V1
diss.genes <- getMouseGene(diss.genes)
}
annotation[gene.manifest$Symbol %in% mito.genes] <- "mitochondrial"
annotation[gene.manifest$Symbol %in% ribo.genes] <- "ribosome"
annotation[gene.manifest$Symbol %in% diss.genes] <- "dissociation"
gene.manifest$Annotation <- annotation
return(gene.manifest)
}
t1 <- addGeneAnno(gene.manifest, species = "mouse")
table(t1$Annotation)
table(t2$Annotation)
devtools::document()
cat("dddddddddd")
print("Ddddd")
method = "dss"
cat("Warning in 'runGeneSets': The 'method' ", method, " is not allowed.")
devtools::build()
library(scCancer)
if(grepl("^/",getwd())){
data.path <- "/data1/immune/PDAC/data/"
save.path <- "/data1/immune/PDAC/results/scCancer1016/"
}else{
data.path <- "F:/Research/Projects/PDAC/data/"
save.path <- "F:/Research/Projects/PDAC/results/scCancer1016/"
}
folders <- dir(data.path)
print(folders)
devtools::build()
sampleManifest <- read.table("../annotation/sampleManifest.txt",
header = T, stringsAsFactors = F)
if(grepl("^/",getwd())){
data.path <- "/data1/immune/PDAC/data/"
save.path <- "/data1/immune/PDAC/results/scCancer1016/"
}else{
data.path <- "F:/Research/Projects/PDAC/data/"
save.path <- "F:/Research/Projects/PDAC/results/scCancer1016/"
}
if(grepl("^/",getwd())){
data.path <- "/data1/immune/PDAC/data/"
save.path <- "/data1/immune/PDAC/results/scCancer1016/"
setwd("/data1/immune/PDAC/codes/")
}else{
data.path <- "F:/Research/Projects/PDAC/data/"
save.path <- "F:/Research/Projects/PDAC/results/scCancer1016/"
setwd("F:/Research/Projects/PDAC/codes/")
}
sampleManifest <- read.table("../annotation/sampleManifest.txt",
header = T, stringsAsFactors = F)
sampleManifest$folderName
folders <- sampleManifest$folderName[ix[[pat.id]]]
sampleNames <- sampleManifest$labels[ix[[pat.id]]]
folders
sampleNames
pat.id = "P1"
folders <- sampleManifest$folderName[ix[[pat.id]]]
sampleNames <- sampleManifest$labels[ix[[pat.id]]]
sampleNames
# all.species <- c("mouse")
ix = list(P1 = c(1, 4, 5), P2 = c(6, 7, 8, 9, 10))
folders <- sampleManifest$folderName[ix[[pat.id]]]
sampleNames <- sampleManifest$labels[ix[[pat.id]]]
folders
sampleNames
folders
library(scCancer)
if(grepl("^/",getwd())){
data.path <- "/data1/immune/PDAC/data/"
save.path <- "/data1/immune/PDAC/results/scCancer1016/"
setwd("/data1/immune/PDAC/codes/")
}else{
data.path <- "F:/Research/Projects/PDAC/data/"
save.path <- "F:/Research/Projects/PDAC/results/scCancer1016/"
setwd("F:/Research/Projects/PDAC/codes/")
}
sampleManifest <- read.table("../annotation/sampleManifest.txt",
header = T, stringsAsFactors = F)
all.species <- c("human", "mouse")
# all.species <- c("mouse")
ix = list(P1 = c(1, 4, 5), P2 = c(6, 7, 8, 9, 10))
for(pat.id in names(ix)){
folders <- sampleManifest$folderName[ix[[pat.id]]]
sampleNames <- sampleManifest$labels[ix[[pat.id]]]
for(fi in 1:length(folders)){
folder <- folders[fi]
sampleName <- sampleNames[fi]
for(species in all.species){
stat.results <- runScStatistics(dataPath = paste0(data.path, folder),
savePath = paste0(save.path, sampleName, "-", species),
sampleName = paste0(sampleName, "-", species),
authorName = "G-Lab@THU",
species = species,
hg.mm.mix = T,
hg.mm.thres = 0.9)
}
}
}
devtools::build()
devtools::build()
library(scCancer)
help("runScAnnotation")
tt <- as.matrix(c(1,2,3,4,5,6), ncol = 1)
tt <- as.matrix(c(1,2,3,4,5,6), ncol = 2)
tt <- matrix(c(1,2,3,4,5,6), ncol = 2)
tt
min(dim(tt))
library(NNLM)
nmf(tt,4)
nnmf(tt,4)
help("dim")
devtools::build()
