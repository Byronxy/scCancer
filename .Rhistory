cell.colors = cell.colors,
sel.col = "Cell.Type",
legend.title = "Cell type")
p.bar <- p.bar + ggplot_config(base.size = 7.5) +
theme(legend.position = "bottom") +
guides(fill = guide_legend(ncol = 3, title = "Cell type"))
p.bar.leg <- cowplot::get_legend(p.bar)
p.bar <- p.bar + theme(legend.position = "none")
ggsave(filename = "../results/testSamples/cellType-bar.png",
p.bar, width = 6, height = 3, dpi = 500)
ggsave(filename = "../results/testSamples/cellType-bar.png",
p.bar, width = 6, height = 3, dpi = 500)
ggsave(filename = "../results/testSamples/cellType-bar-leg.png",
p.bar.leg, width = 4, height = 3, dpi = 500)
ggsave(filename = "../results/testSamples/cellType-bar.png",
p.bar, width = 6, height = 3.5, dpi = 500)
ggsave(filename = "../results/testSamples/cellType-bar-leg.png",
p.bar.leg, width = 4, height = 2, dpi = 500)
ggsave(filename = "../results/testSamples/cellType-bar.png",
p.bar, width = 6, height = 3.5, dpi = 500)
ggsave(filename = "../results/testSamples/cellType-bar-leg.png",
p.bar.leg, width = 6, height = 2, dpi = 500)
p.bar <- p.bar + ggplot_config(base.size = 7.5) +
theme(legend.position = "bottom") +
guides(fill = guide_legend(ncol = 3, title = "Cell type"))+
theme(legend.title.align = 0)
p.bar
p.bar <- p.bar + ggplot_config(base.size = 7.5) +
theme(legend.position = "bottom") +
guides(fill = guide_legend(ncol = 3, title = "Cell type"))+
theme(legend.title.align = -1)
p.bar
p.bar <- p.bar + ggplot_config(base.size = 7.5) +
theme(legend.position = "bottom") +
guides(fill = guide_legend(ncol = NULL, title = "Cell type"))
p.bar
devtools::build()
p.bar.leg
p.bar.leg <- p.bar.leg + labs(title = "Cell type")
p.bar <- p.bar + ggplot_config(base.size = 7.5) +
theme(legend.position = "bottom") +
guides(fill = guide_legend(ncol = NULL, title = "Cell type",
title.position = "top"))
p.bar.leg <- cowplot::get_legend(p.bar)
p.bar <- p.bar + theme(legend.position = "none")
ggsave(filename = "../results/testSamples/cellType-bar.png",
p.bar, width = 6, height = 3.5, dpi = 500)
ggsave(filename = "../results/testSamples/cellType-bar-leg.png",
p.bar.leg, width = 6, height = 2, dpi = 500)
p.bar <- p.bar + ggplot_config(base.size = 7.5) +
theme(legend.position = "bottom") +
guides(fill = guide_legend(ncol = 3, title = "Cell type",
title.position = "top"))
p.bar.leg <- cowplot::get_legend(p.bar)
p.bar <- p.bar + theme(legend.position = "none")
ggsave(filename = "../results/testSamples/cellType-bar.png",
p.bar, width = 6, height = 3.5, dpi = 500)
ggsave(filename = "../results/testSamples/cellType-bar-leg.png",
p.bar.leg, width = 6, height = 2, dpi = 500)
cell.annotation <- read.table("../results/20180829-KC-P2-Tumor-vCR3/cellAnnotation.txt",
header = T, stringsAsFactors = F)
rownames(cell.annotation) <- cell.annotation$barcodes
cell.colors <- getCellTypeColor(cell.types = unique(cell.annotation$Cell.Type))
# message(sprintf('------p.bar------'))
p.bar <- clusterBarPlot(cell.annotation = cell.annotation,
cell.colors = cell.colors,
sel.col = "Cell.Type",
legend.title = "Cell type")
p.bar <- p.bar + ggplot_config(base.size = 7.5) +
theme(legend.position = "bottom") +
guides(fill = guide_legend(ncol = 3, title = "Cell type",
title.position = "top"))
p.bar.leg <- cowplot::get_legend(p.bar)
p.bar <- p.bar + theme(legend.position = "none")
ggsave(filename = "../results/testSamples/cellType-bar.png",
p.bar, width = 6, height = 3.5, dpi = 500)
ggsave(filename = "../results/testSamples/cellType-bar-leg.png",
p.bar.leg, width = 6, height = 2, dpi = 500)
devtools::build()
devtools::build
devtools::build()
library(scCancer)
cell.annotation <- read.table("../results/20180829-KC-P2-Tumor-vCR3/cellAnnotation.txt",
header = T, stringsAsFactors = F)
rownames(cell.annotation) <- cell.annotation$barcodes
p.malignType.Point <- pointDRPlot(cell.annotation, value = "Malign.type",
# coor.names = coor.names,
colors = c("malignant" = "#f57e87", "nonMalignant" = "#66d5a5"),
legend.position = "right",
legend.title = "Malignancy\n type")
p.malignType.Point
p.malignType.Point <- p.malignType.Point +
ggplot_config(base.size = 7)
p.malignType.Point
p.malignScore.Point <- p.malignScore.Point +
ggplot_config(base.size = 7)
referScore.smooth <- read.table("../results/20180829-KC-P2-Tumor-vCR3/malignancy/refer-malignScore.txt")
View(referScore.smooth)
referScore.smooth <- referScore.smooth$referScore.smooth
malign.thres <- 2.24e-04
p.malignScore <- malignPlot(obserScore.smooth, referScore.smooth,
malign.thres = malign.thres)
malignPlot <- function(obserScore, referScore, malign.thres = NULL){
scoreDF <- data.frame(malignScore = c(obserScore, referScore),
sets = c(rep("Observation", length(obserScore)),
rep("Reference", length(referScore))))
p <- ggplot() +
geom_histogram(data = subset(scoreDF, sets == "Observation"),
mapping = aes(x = malignScore, fill = "Observation"),
bins = 150, alpha = 0.6) +
geom_histogram(data = subset(scoreDF, sets == "Reference"),
mapping = aes(x = malignScore, fill = "Reference"),
bins = 150, alpha = 0.6) +
labs(x = "Malignancy score", y = "Droplets count") +
scale_fill_manual(name = "Cells sets", guide = "legend",
values = c("Observation"="#2e68b7", "Reference"="grey")) +
theme_classic() +
ggplot_config(base.size = 7) +
theme(legend.justification = c(1.12,1.12), legend.position = c(1,1))
if(!is.null(malign.thres)){
p <- p + geom_vline(xintercept = malign.thres, colour = "red", linetype = "dashed")
}
return(p)
}
p.malignScore <- malignPlot(obserScore.smooth, referScore.smooth,
malign.thres = malign.thres)
obserScore.smooth <- cell.annotation$Malign.score
referScore.smooth <- read.table("../results/20180829-KC-P2-Tumor-vCR3/malignancy/refer-malignScore.txt")
referScore.smooth <- referScore.smooth$referScore.smooth
malign.thres <- 2.24e-04
p.malignScore <- malignPlot(obserScore.smooth, referScore.smooth,
malign.thres = malign.thres)
library(ggplot2)
p.malignScore <- malignPlot(obserScore.smooth, referScore.smooth,
malign.thres = malign.thres)
p.malignScore
p.malignScore <- p.malignScore +
ggplot_config(base.size = 7)
p.malignScore
p.malignScore <- p.malignScore.Point +
ggplot_config(base.size = 7)+
theme(legend.justification = c(1.12,1.12), legend.position = c(1,1))
p.malignScore <- p.malignScore +
ggplot_config(base.size = 7)+
theme(legend.justification = c(1.12,1.12), legend.position = c(1,1))
p.malignScore
ggsave(filename = "../results/testSamples/malignScore.png",
p.malignScore, width = 5, height = 4, dpi = 500)
ggsave(filename = "../results/testSamples/malignType-point.png",
p.malignType.Point, width = 5, height = 3.8, dpi = 500)
ggsave(filename = "../results/testSamples/malignScore-point.png",
p.malignScore.Point, width = 5, height = 3.8, dpi = 500)
p.malignType.Point <- pointDRPlot(cell.annotation, value = "Malign.type",
# coor.names = coor.names,
colors = c("malignant" = "#f57e87", "nonMalignant" = "#66d5a5"),
legend.position = "right",
legend.title = "Malignancy\n type")
p.malignType.Point <- p.malignType.Point +
ggplot_config(base.size = 7)
p.malignScore.Point <- pointDRPlot(cell.annotation, value = "Malign.score",
# coor.names = coor.names,
colors = c("white", "#f57e87"),
discrete = F,
limit.quantile = 0.1,
legend.position = "right",
legend.title = "Malignancy\n score")
p.malignScore.Point <- p.malignScore.Point +
ggplot_config(base.size = 7)
obserScore.smooth <- cell.annotation$Malign.score
referScore.smooth <- read.table("../results/20180829-KC-P2-Tumor-vCR3/malignancy/refer-malignScore.txt")
referScore.smooth <- referScore.smooth$referScore.smooth
malign.thres <- 2.24e-04
p.malignScore <- malignPlot(obserScore.smooth, referScore.smooth,
malign.thres = malign.thres)
p.malignScore <- p.malignScore +
ggplot_config(base.size = 7)+
theme(legend.justification = c(1.12,1.12), legend.position = c(1,1))
ggsave(filename = "../results/testSamples/malignScore.png",
p.malignScore, width = 5, height = 4, dpi = 500)
ggsave(filename = "../results/testSamples/malignType-point.png",
p.malignType.Point, width = 5, height = 3.8, dpi = 500)
ggsave(filename = "../results/testSamples/malignScore-point.png",
p.malignScore.Point, width = 5, height = 3.8, dpi = 500)
###   statistics
library(scCancer)
library(Seurat)
library(ggplot2)
library(cowplot)
library(pheatmap)
library(reshape2)
element_blank()
help(gtable_filter)
help(grid.arrange)
help(geom_boxplot)
devtools::build()
library(scCancer)
library(ggplot2)
cell.annotation <- read.table("../results/20180829-KC-P2-Tumor-vCR3/cellAnnotation.txt",
header = T, stringsAsFactors = F)
rownames(cell.annotation) <- cell.annotation$barcodes
obserScore.smooth <- cell.annotation$Malign.score
referScore.smooth <- read.table("../results/20180829-KC-P2-Tumor-vCR3/malignancy/refer-malignScore.txt")
referScore.smooth <- referScore.smooth$referScore.smooth
up.refer <- quantile(referScore.smooth, 0.995)
low.refer <- quantile(referScore.smooth, 0.005)
up.refer
up.refer <- quantile(referScore.smooth, 0.995)
low.refer <- quantile(referScore.smooth, 0.005)
referScore.smooth <- (referScore.smooth - low.refer) / (up.refer - low.refer)
obserScore.smooth <- (obserScore.smooth - low.refer) / (up.refer - low.refer)
malign.thres <- NULL
p.malignScore <- malignPlot(obserScore.smooth, referScore.smooth,
malign.thres = malign.thres)
p.malignScore
referScore.smooth <- read.table("../results/20180829-KC-P2-Tumor-vCR3/malignancy/refer-malignScore.txt")
referScore.smooth <- referScore.smooth$referScore.smooth
obserScore.smooth <- cell.annotation$Malign.score
referScore.smooth <- read.table("../results/20180829-KC-P2-Tumor-vCR3/malignancy/refer-malignScore.txt")
referScore.smooth <- referScore.smooth$referScore.smooth
up.refer <- quantile(referScore.smooth, 0.99)
low.refer <- quantile(referScore.smooth, 0.01)
referScore.smooth <- (referScore.smooth - low.refer) / (up.refer - low.refer)
obserScore.smooth <- (obserScore.smooth - low.refer) / (up.refer - low.refer)
malign.thres <- NULL
p.malignScore <- malignPlot(obserScore.smooth, referScore.smooth,
malign.thres = malign.thres)
p.malignScore
library(scCancer)
library(ggplot2)
cell.annotation <- read.table("../results/20180829-KC-P2-Tumor-vCR3/cellAnnotation.txt",
header = T, stringsAsFactors = F)
rownames(cell.annotation) <- cell.annotation$barcodes
p.malignType.Point <- pointDRPlot(cell.annotation, value = "Malign.type",
# coor.names = coor.names,
colors = c("malignant" = "#f57e87", "nonMalignant" = "#66d5a5"),
legend.position = "right",
legend.title = "Malignancy\n type")
p.malignType.Point <- p.malignType.Point +
ggplot_config(base.size = 7)
p.malignScore.Point <- pointDRPlot(cell.annotation, value = "Malign.score",
# coor.names = coor.names,
colors = c("white", "#f57e87"),
discrete = F,
limit.quantile = 0.1,
legend.position = "right",
legend.title = "Malignancy\n score")
p.malignScore.Point <- p.malignScore.Point +
ggplot_config(base.size = 7)
obserScore.smooth <- cell.annotation$Malign.score
referScore.smooth <- read.table("../results/20180829-KC-P2-Tumor-vCR3/malignancy/refer-malignScore.txt")
referScore.smooth <- referScore.smooth$referScore.smooth
malign.thres <- 2.24e-04
malign.thres <- 0.378
# malign.thres <- NULL
p.malignScore <- malignPlot(obserScore.smooth, referScore.smooth,
malign.thres = malign.thres)
p.malignScore <- p.malignScore +
ggplot_config(base.size = 7)+
theme(legend.justification = c(1.12,1.12), legend.position = c(1,1))
ggsave(filename = "../results/testSamples/malignScore.png",
p.malignScore, width = 5, height = 4, dpi = 500)
ggsave(filename = "../results/testSamples/malignType-point.png",
p.malignType.Point, width = 5, height = 3.8, dpi = 500)
ggsave(filename = "../results/testSamples/malignScore-point.png",
p.malignScore.Point, width = 5, height = 3.8, dpi = 500)
help("geom_point")
sampleStat <- read.table("../results/sampleStat.txt",
quote = "\t", header = T, stringsAsFactors = F)
### stat info
table(sampleStat$dataset)
for(data in unique(sampleStat$dataset)){
print(data)
print(sum(subset(sampleStat, dataset == data)$nCells))
}
### QC threshold
mes.name <- c("nUMI", "nGene", "mito.percent", "ribo.percent", "diss.percent")
colors <- c("#825f87", "#d56f6d", "#3778bf", "#f29721", "#65a55d")
for(i in 1:length(mes.name)){
mes <- mes.name[i]
color <- colors[i]
p <- ggplot() +
geom_boxplot(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
fill = color, alpha = 0.5) +
# geom_point(data = cur.df, mapping = aes(x = Cancer, y = High.threshold, color = Sample), position = "jitter", alpha = 0.7) +
geom_point(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
position = "jitter", alpha = 0.5, size = 3) +
coord_flip() +
ggplot_config(base.size = 7) +
# labs(x = NULL, y = paste0(mes, " - high.thresholds"), title = mes)
labs(x = NULL, y = NULL, title = mes) +
theme(plot.title = element_text(size = 16))
ggsave(paste0("../results/testSamples/", mes, "-high.thres2.png"),
p, height = 2, width = 4)
# ggsave(paste0("/home/glab/wguo/scCancer/results/testSamples/", mes, "-high.thres.png"),
#        p, height = 3.6, width = 3)
}
for(i in 1:length(mes.name)){
mes <- mes.name[i]
color <- colors[i]
p <- ggplot() +
geom_boxplot(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
fill = color, alpha = 0.5) +
# geom_point(data = cur.df, mapping = aes(x = Cancer, y = High.threshold, color = Sample), position = "jitter", alpha = 0.7) +
geom_point(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
position = "jitter", alpha = 0.5, size = 0.5) +
coord_flip() +
ggplot_config(base.size = 7) +
# labs(x = NULL, y = paste0(mes, " - high.thresholds"), title = mes)
labs(x = NULL, y = NULL, title = mes) +
theme(plot.title = element_text(size = 16))
ggsave(paste0("../results/testSamples/", mes, "-high.thres2.png"),
p, height = 2, width = 4)
# ggsave(paste0("/home/glab/wguo/scCancer/results/testSamples/", mes, "-high.thres.png"),
#        p, height = 3.6, width = 3)
}
help(geom_boxplot)
for(i in 1:length(mes.name)){
mes <- mes.name[i]
color <- colors[i]
p <- ggplot() +
geom_boxplot(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
fill = color, alpha = 0.5, outlier.shape = NA) +
# geom_point(data = cur.df, mapping = aes(x = Cancer, y = High.threshold, color = Sample), position = "jitter", alpha = 0.7) +
geom_point(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
position = "jitter", alpha = 0.5, size = 0.5) +
coord_flip() +
ggplot_config(base.size = 7) +
# labs(x = NULL, y = paste0(mes, " - high.thresholds"), title = mes)
labs(x = NULL, y = NULL, title = mes) +
theme(plot.title = element_text(size = 16))
ggsave(paste0("../results/testSamples/", mes, "-high.thres2.png"),
p, height = 2, width = 4)
# ggsave(paste0("/home/glab/wguo/scCancer/results/testSamples/", mes, "-high.thres.png"),
#        p, height = 3.6, width = 3)
}
for(i in 1:length(mes.name)){
mes <- mes.name[i]
color <- colors[i]
p <- ggplot() +
geom_boxplot(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
fill = color, alpha = 0.5, outlier.shape = NA) +
# geom_point(data = cur.df, mapping = aes(x = Cancer, y = High.threshold, color = Sample), position = "jitter", alpha = 0.7) +
geom_point(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
position = "jitter", alpha = 0.5, size = 0.5) +
coord_flip() +
ggplot_config(base.size = 6.5) +
# labs(x = NULL, y = paste0(mes, " - high.thresholds"), title = mes)
labs(x = NULL, y = NULL, title = mes) +
theme(plot.title = element_text(size = 16))
ggsave(paste0("../results/testSamples/", mes, "-high.thres2.png"),
p, height = 2, width = 4)
# ggsave(paste0("/home/glab/wguo/scCancer/results/testSamples/", mes, "-high.thres.png"),
#        p, height = 3.6, width = 3)
}
for(i in 1:length(mes.name)){
mes <- mes.name[i]
color <- colors[i]
p <- ggplot() +
geom_boxplot(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
fill = color, alpha = 0.5, outlier.shape = NA) +
# geom_point(data = cur.df, mapping = aes(x = Cancer, y = High.threshold, color = Sample), position = "jitter", alpha = 0.7) +
geom_point(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
position = "jitter", alpha = 0.5, size = 0.7) +
coord_flip() +
ggplot_config(base.size = 6.5) +
# labs(x = NULL, y = paste0(mes, " - high.thresholds"), title = mes)
labs(x = NULL, y = NULL, title = mes) +
theme(plot.title = element_text(size = 16))
ggsave(paste0("../results/testSamples/", mes, "-high.thres2.png"),
p, height = 2, width = 4)
# ggsave(paste0("/home/glab/wguo/scCancer/results/testSamples/", mes, "-high.thres.png"),
#        p, height = 3.6, width = 3)
}
for(i in 1:length(mes.name)){
mes <- mes.name[i]
color <- colors[i]
p <- ggplot() +
geom_boxplot(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
fill = color, alpha = 0.5, outlier.shape = NA) +
# geom_point(data = cur.df, mapping = aes(x = Cancer, y = High.threshold, color = Sample), position = "jitter", alpha = 0.7) +
geom_point(data = sampleStat, mapping = aes(x = dataset, y = sampleStat[[mes]]),
position = "jitter", alpha = 0.5, size = 0.7) +
coord_flip() +
ggplot_config(base.size = 6.5) +
# labs(x = NULL, y = paste0(mes, " - high.thresholds"), title = mes)
labs(x = NULL, y = NULL, title = mes) +
theme(plot.title = element_text(size = 16))
ggsave(paste0("../results/testSamples/", mes, "-high.thres.png"),
p, height = 2, width = 4)
# ggsave(paste0("/home/glab/wguo/scCancer/results/testSamples/", mes, "-high.thres.png"),
#        p, height = 3.6, width = 3)
}
devtools::build()
devtools::build()
devtools::build()
devtools::build()
sampleStat <- read.table("../results/sampleStat.txt",
quote = "\t", header = T, stringsAsFactors = F)
library(reshape2)
cell.types <- c("Epithelial", "Endothelial", "Fibroblast", "Immune", "T.cells", "B.cells", "NK.cells", "Myeloid.cells")
p.df <- data.frame()
for(ct in cell.types){
cur.df <- sampleStat[, c("dataset", ct)]
cur.df$Cell.type <- rep(ct, dim(cur.df)[1])
colnames(cur.df) <- c("Dataset", "Correlation", "Cell.type")
p.df <- rbind(p.df, cur.df)
}
p.df$Cell.type <- factor(p.df$Cell.type, levels = cell.types)
ct.color <- c(
"T.cells" = "#07a2a4",
"Immune" = "#9a7fd1",
"B.cells" = "#588dd5",
"NK.cells" = "#f5994e",
"Myeloid.cells" = "#c05050",
"Endothelial" = "#59678c",
"Fibroblast" = "#c9ab00",
"Epithelial" = "#7eb00a")
p <- ggplot() +
geom_boxplot(data = p.df, mapping = aes(x = Dataset, y = Correlation, fill = Cell.type),
alpha = 0.9, outlier.shape = NA) +
geom_point(data = p.df, mapping = aes(x = Dataset, y = Correlation), position = "jitter",
alpha = 0.4, size = 0.5) +
scale_fill_manual(values = ct.color) +
scale_y_continuous(breaks = seq(-0.2, 1, 0.2)) +
# coord_flip() +
# ggplot_config(base.size = 6) +
theme_light() +
theme(axis.title.y = element_text(size = 13, vjust = 1.5),
axis.text.y = element_text(size = 11),
axis.text.x = element_text(size = 11),
panel.border = element_rect(color = "black")) +
labs(x = NULL, y = "Correlation", title = "Correlation between cell type percent and marker detection rate")
library(ggplot2)
p <- ggplot() +
geom_boxplot(data = p.df, mapping = aes(x = Dataset, y = Correlation, fill = Cell.type),
alpha = 0.9, outlier.shape = NA) +
geom_point(data = p.df, mapping = aes(x = Dataset, y = Correlation), position = "jitter",
alpha = 0.4, size = 0.5) +
scale_fill_manual(values = ct.color) +
scale_y_continuous(breaks = seq(-0.2, 1, 0.2)) +
# coord_flip() +
# ggplot_config(base.size = 6) +
theme_light() +
theme(axis.title.y = element_text(size = 13, vjust = 1.5),
axis.text.y = element_text(size = 11),
axis.text.x = element_text(size = 11),
panel.border = element_rect(color = "black")) +
labs(x = NULL, y = "Correlation", title = "Correlation between cell type percentages and marker detection rates")
ggsave("../results/testSamples/cellType.cor.png", p, height = 2.5, width = 10)
p.leg <- cowplot::get_legend(p)
p <- p + theme(legend.position = "none")
p.df$Cell.type <- factor(p.df$Cell.type, levels = rev(cell.types))
p2 <- ggplot() +
geom_density(data = p.df, mapping = aes(x = Correlation, fill = Cell.type), alpha = 0.6) +
scale_fill_manual(values = ct.color) +
scale_x_continuous(breaks = seq(-0.2, 1, 0.2)) +
geom_vline(xintercept = 0.5, colour = "red", linetype = "dashed") +
annotate("text", x = 0.58, y = 6.5, label = "91.74%", color = "black") +
annotate("text", x = 0.42, y = 6.5, label = "  8.26%", color = "black") +
coord_flip() +
labs(x = NULL, y = "Density", title = "Correlation distribution") +
theme_light() +
theme(axis.title.y = element_text(size = 13, vjust = 1.5),
axis.text.y = element_text(size = 11),
axis.text.x = element_blank(),
panel.border = element_rect(color = "black"),
legend.position = "none")
p2
ggsave("../results/testSamples/cellType.cor3.png", p2, height = 2.5, width = 2.5)
library(gridExtra)
p.ic <- grid.arrange(
grobs = list(p, p2, p.leg),
widths = c(7.8, 2, 1.2),
layout_matrix = rbind(c(1, 2, 3)))
ggsave("../results/testSamples/cellType.cor4.png", p.ic, height = 2.5, width = 12.5)
help(GetAssayData)
library(Seurat)
help(GetAssayData)
expr <- readRDS(paste0("F:/Research/Projects/singleCell/results/20180829-KC-P2-Tumor-vCR3/expr.RDS"))
cell.annotation <- read.table("F:/Research/Projects/singleCell/results/20180829-KC-P2-Tumor-vCR3/cellAnnotation.txt", header = T)
rownames(cell.annotation) <- cell.annotation$barcodes
cell.annotation$MALAT1 <- GetAssayData(expr, "counts")["MALAT1", ]
head(GetAssayData(expr, "counts")["MALAT1", ])
head(cell.annotation$barcodes)
pointDRPlot(cell.annotation, value = "MALAT1",
# coor.names = coor.names,
colors = c("white", "#f57e87"),
discrete = F,
limit.quantile = 0.1,
legend.position = "right")
library(scCancer)
pointDRPlot(cell.annotation, value = "MALAT1",
# coor.names = coor.names,
colors = c("white", "#f57e87"),
discrete = F,
limit.quantile = 0.1,
legend.position = "right")
hist(cell.annotation$MALAT1)
cell.annotation$MALAT1[cell.annotation$MALAT1 > 800] <- 800
pointDRPlot(cell.annotation, value = "MALAT1",
# coor.names = coor.names,
colors = c("white", "#f57e87"),
discrete = F,
limit.quantile = 0.1,
legend.position = "right")
pointDRPlot(cell.annotation, value = "MALAT1",
# coor.names = coor.names,
colors = c("white", "#f57e87"),
point.type = 2,
discrete = F,
limit.quantile = 0.1,
legend.position = "right")
